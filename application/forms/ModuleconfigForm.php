<?php
/* Originally from Icinga Web 2 Reporting Module (c) Icinga GmbH | GPLv2+ */

/* generated by icingaweb2-module-scaffoldbuilder | GPLv2+ */

namespace Icinga\Module\Clustergraph\Forms;

use Icinga\Data\ResourceFactory;
use Icinga\Forms\ConfigForm;

class ModuleconfigForm extends ConfigForm
{

    protected static $dummyPassword = '_web_form_m0r34m4z1n6n1ck';


    public function init()
    {

        $this->setName('clustergraph_settings');
        $this->setSubmitLabel($this->translate('Save Changes'));
    }

    public function createElements(array $formData)
    {
        $this->addElement('hidden', 'api_transport', [
            'value'=>'api'
        ]);

        $this->addElement('text', 'api_username', [
            'label' => 'API User',
            'description' => 'Add a user in api-users.conf with these permissions:  permissions = [ "objects/query/Zone", "objects/query/Endpoint" ]',
            'required' => true,
        ]);

        $this->addElement('password', 'api_password', [
            'label' => 'API Password',
            'autocomplete' => 'new-password',
            'required' => true,
            'renderPassword' => true
        ]);

        $this->addElement('text', 'api_host', [
            'label' => 'API Endpoint',
            'description' => 'Your hostname e.g localhost',
            'required' => true,
        ]);
        $this->addElement('text', 'api_port', [
            'label' => 'API Port',
            'description' => 'e.g. 5665',
            'value' => '5665',
            'required' => true,
        ]);

        $this->addElement('select', 'graph_ui', [
            'label' => 'Web UI',
            'description' => 'Select your perferred web interface',
            'multiOptions' => [
                'icingaweb2' => 'Icingaweb2',
                'icingadb' => 'Icingadb Web',
                // Add more options as needed
            ],
            'value' => 'icingaweb2',
            'required' => true,
        ]);

    }

    public function onRequest()
    {
        parent::onRequest();
        foreach ($this->getElements() as $element) {
            if ($element->getType() === 'Zend_Form_Element_Password' && strlen($element->getValue())) {
                $element->setValue(static::$dummyPassword);
            }
        }
    }

    /**
     * {@inheritdoc}
     */
    public function getValues($suppressArrayNotation = false)
    {
        $values = parent::getValues($suppressArrayNotation);
        $apiResource = "api";
        if ($apiResource !== null && $this->config->hasSection($apiResource)) {

            $resourceConfig = $this->config->getSection($apiResource)->toArray();

            foreach ($this->getElements() as $element) {
                if ($element->getType() === 'Zend_Form_Element_Password') {
                    $name = $element->getName();
                    $name2 = str_replace($apiResource . "_", "", $name);

                    if (isset($values[$name]) && $values[$name] === static::$dummyPassword) {
                        if (isset($resourceConfig[$name2])) {
                            $values[$name] = $resourceConfig[$name2];
                        } else {
                            unset($values[$name]);
                        }

                    }
                }
            }
        }
        $graphResource = "graph";
        if ($graphResource !== null && $this->config->hasSection($graphResource)) {
            $graphConfig = $this->config->getSection($graphResource)->toArray();
            $name = $element->getName();
            $name2 = str_replace($graphResource . "_", "", $name);
            if (isset($values[$name])) {
                if (isset($graphConfig[$name2])) {
                    $values[$name] = $graphConfig[$name2];
                } else {
                    unset($values[$name]);
                }
            }
        }

        return $values;
    }

}